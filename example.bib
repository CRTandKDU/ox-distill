@article{Schoenhage1980,
    author = {Schönhage, A.},
    title = {{Storage Modification Machines}},
    journal = {{SIAM Journal on Computing}},
    volume = {9},
    number = {3},
    pages = {490-508},
    year = {1980},
    doi = {10.1137/0209036},
    URL = "https://doi.org/10.1137/0209036",
    eprint = "https://doi.org/10.1137/0209036"
}

@article{VANEMDEBOAS1989103,
title = {Space measures for storage modification machines},
journal = {Information Processing Letters},
volume = {30},
number = {2},
pages = {103-110},
year = {1989},
issn = {0020-0190},
doi = "https://doi.org/10.1016/0020-0190(89)90117-8",
url = "https://www.sciencedirect.com/science/article/pii/0020019089901178",
author = {Peter {van Emde Boas}},
keywords = {Turing Machines, Random Access Machines, time complexity, space complexity, Invariance Thesis, Storage Modification Machines, simulations},
abstract = {In the theory of Machine Models in Complexity Theory much attention has been given to establishing polynomial time overhead simulations between the various sequential models. It has been taken for granted that these models simulate each other with constant factor overhead in space. We show in this note that such constant factor space overhead simulations do not exist for pointer based models like the Storage Modification Machine and the Kolmogorov-Uspenskii Machine under the uniform space measure. On these devices one can simulate SÂ·log(S) squares of Turing Machine space in O(S) nodes. As a consequence one faces the choice of either using a less evident logarithmic space measure for pointer machines, or giving up the fundamental notion of invariance of space for sequential devices.}
}

@article{CockeMinsky1964,
    author = {Cocke, John and Minsky, Marvin},
    title = {{Universality of Tag Systems with P = 2}},
    year = {1964},
    issue_date = {Jan. 1964},
    publisher = {{Association for Computing Machinery}},
    address = {New York, NY, USA},
    volume = {11},
    number = {1},
    issn = {0004-5411},
    url = "https://doi.org/10.1145/321203.321206",
    doi = {10.1145/321203.321206},
    abstract = {By a simple direct construction it is
    shown that computations done by Turing machines can
    be duplicated by a very simple symbol manipulation
    process. The process is described by a simple form
    of Post canonical system with some very strong
    restrictions.This system is monogenic: each formula
    (string of symbols) of the system can be affected by
    one and only one production (rule of inference) to
    yield a unique result. Accordingly, if we begin with
    a single axiom (initial string) the system generates
    a simply ordered sequence of formulas, and this
    operation of a monogenic system brings to mind the
    idea of a machine.The Post canonical system is
    further restricted to the “Tag” variety, described
    briefly below. It was shown in [1] that Tag systems
    are equivalent to Turing machines. The proof in [1]
    is very complicated and uses lemmas concerned with a
    variety of two-tape nonwriting Turing machines. The
    proof here avoids these otherwise interesting
    machines and strengthens the main result; obtaining
    the theorem with a best possible deletion number P =
    2.Also, the representation of the Turing machine in
    the present system has a lower degree of
    exponentiation, which may be of significance in
    applications.These systems seem to be of value in
    establishing unsolvability of combinatorial
    problems.},
    journal = {J. ACM},
    month = jan,
    pages = {15–20},
    numpages = {6}
}

@article{Cook2004,
  title={Universality in elementary cellular automata},
  author={Cook, Matthew and others},
  journal={Complex systems},
  volume={15},
  number={1},
  pages={1--40},
  year={2004},
  publisher={[Champaign, IL, USA: Complex Systems Publications, Inc., c1987-}
}

